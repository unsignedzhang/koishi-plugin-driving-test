import { Context, Schema, h } from 'koishi'
import axios, { AxiosRequestConfig } from 'axios'; 
import fetch from 'cross-fetch'; 
export const sleep = (ms: number): Promise<void> =>
  new Promise((resolve) => setTimeout(resolve, ms))
export const name = 'driving-test'
const chapters1 = ["27108", "33859", "6", "15", "24", "25", "26", "27", "33", "41", "42", "43", "44", "45", "249", "250", "251", "252", "253", "254", "258", "262", "263", "264", "265", "267", "270", "318", "319", "320", "326", "327", "330", "331", "333", "335", "336", "337", "353", "354", "356", "363", "364", "365", "7674", "7676", "7681", "7682", "7702", "7704", "7707", "7719", "7721", "7745", "7746", "7757", "7760", "7766", "7784", "7793", "7794", "7797", "7804", "7824", "7825", "7828", "7829", "13483", "16509", "26011", "26066", "26434", "26512", "27098", "27103", "27105", "27111", "27112", "27114", "27125", "27136", "27138", "27159", "27168", "28104", "28922", "29297", "29302", "29303", "29308", "29326", "33377", "33401", "33402", "33405", "33414", "33415", "33454", "33461", "33510", "33515", "33519", "33526", "33531", "33543", "33546", "33550", "33564", "33565", "33580", "33584", "33587", "33590", "33596", "33615", "33625", "33631", "33650", "33651", "33652", "33664", "33668", "33669", "33670", "33671", "33672", "33673", "33674", "33675", "33676", "33677", "33678", "33679", "33680", "33681", "33682", "33683", "33684", "33685", "33687", "33688", "33689", "33690", "33691", "33692", "33693", "33696", "33698", "33699", "33700", "33701", "33704", "33705", "33706", "33707", "33708", "33709", "33711", "33714", "33717", "33798", "33801", "33807", "33809", "33843", "33854", "33860", "33903", "33977", "33863", "33868", "10", "13", "28", "30", "37", "39", "40", "246", "247", "248", "255", "256", "260", "261", "266", "268", "269", "316", "317", "321", "322", "323", "325", "328", "329", "332", "334", "338", "340", "341", "342", "343", "346", "347", "348", "350", "362", "7701", "7703", "7705", "7718", "7722", "7727", "7744", "7748", "7755", "7756", "7782", "7783", "7803", "7806", "7823", "13597", "24270", "26017", "26527", "27101", "27121", "27149", "28102", "33458", "33471", "33540", "33545", "33553", "33562", "33578", "33591", "33629", "33635", "33636", "33639", "33654", "33659", "33720", "33721", "33722", "33723", "33724", "33725", "33727", "33728", "33729", "33730", "33731", "33732", "33733", "33734", "33736", "33738", "33739", "33740", "33741", "33743", "33745", "33747", "33748", "33749", "33855", "33856", "33858", "33885"];
const chapters2 = ["26848", "27116", "27170", "28101", "33404", "33406", "33413", "33416", "33419", "33470", "33490", "33492", "33493", "33494", "33612", "33622", "33633", "33637", "33875", "33878", "33879", "33895", "33976", "33978", "33981", "33986", "33987", "33988", "33989", "33994", "49", "50", "51", "52", "60", "61", "63", "64", "65", "66", "75", "76", "78", "80", "81", "82", "83", "91", "100", "101", "102", "103", "104", "105", "121", "122", "124", "126", "127", "133", "134", "135", "144", "147", "148", "150", "151", "153", "160", "161", "162", "163", "164", "166", "167", "170", "173", "174", "175", "176", "177", "185", "186", "188", "190", "191", "198", "199", "200", "201", "203", "204", "205", "212", "213", "222", "224", "225", "229", "230", "231", "240", "241", "242", "243", "244", "245", "272", "367", "368", "370", "372", "373", "375", "377", "379", "380", "381", "385", "387", "389", "392", "393", "567", "568", "569", "570", "571", "572", "573", "574", "575", "576", "577", "578", "579", "580", "581", "582", "583", "584", "585", "586", "587", "589", "590", "591", "592", "593", "594", "595", "596", "597", "598", "599", "600", "601", "602", "603", "604", "605", "606", "695", "708", "711", "712", "716", "720", "755", "756", "757", "760", "761", "764", "765", "767", "771", "772", "773", "774", "775", "776", "777", "779", "780", "781", "783", "793", "795", "796", "797", "798", "799", "800", "801", "802", "803", "804", "805", "806", "808", "809", "819", "822", "830", "833", "835", "838", "847", "849", "2551", "2552", "2553", "2554", "2555", "2556", "2558", "2559", "2560", "2564", "2570", "2571", "2572", "2573", "2574", "2578", "2579", "2580", "2581", "2582", "2592", "2593", "2594", "2595", "2596", "2603", "2607", "2608", "2609", "2610", "2615", "2617", "2618", "2619", "2620", "2623", "2624", "2625", "2626", "2627", "2632", "2634", "2635", "2636", "7677", "7678", "7679", "7683", "7684", "7685", "7686", "7688", "7692", "7693", "7695", "7696", "7699", "7709", "7710", "7711", "7712", "7713", "7733", "7741", "7749", "7750", "7761", "7763", "7767", "7769", "7772", "7775", "7776", "7777", "7778", "7779", "7780", "7787", "7795", "7796", "7798", "7799", "7808", "7809", "7815", "7817", "7819", "13482", "13484", "13485", "13487", "13488", "13489", "13490", "13496", "13497", "13498", "13500", "13501", "13502", "13503", "13504", "13514", "13523", "13524", "13542", "13601", "13602", "13606", "13613", "13897", "22681", "22682", "22683", "22689", "22699", "22703", "22770", "22771", "24423", "24552", "24553", "24555", "24557", "24558", "24559", "24560", "26431", "26446", "26679", "26742", "26839", "26844", "26846", "27096", "27117", "27146", "27148", "27152", "27169", "28122", "28132", "28932", "28937", "29290", "29313", "29329", "29352", "33381", "33388", "33398", "33409", "33412", "33508", "33525", "33538", "33542", "33552", "33556", "33570", "33623", "33627", "33703", "33795", "33802", "33823", "33828", "33842", "33844", "33870", "33876", "33890", "33893", "33959", "33967", "179905", "33407", "33421", "33455", "33460", "33465", "33491", "33618", "33619", "33626", "33642", "33865", "33872", "33873", "33874", "33888", "33889", "33892", "33896", "33960", "33971", "33992", "33993", "179998", "46", "47", "48", "53", "54", "55", "56", "57", "58", "59", "67", "68", "69", "70", "71", "72", "73", "85", "86", "87", "88", "89", "90", "92", "93", "94", "95", "96", "97", "98", "99", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "128", "129", "130", "131", "132", "136", "137", "138", "140", "141", "142", "143", "145", "146", "154", "155", "156", "157", "158", "159", "165", "168", "171", "172", "182", "183", "184", "189", "192", "193", "194", "195", "196", "197", "207", "208", "209", "210", "211", "214", "215", "216", "217", "218", "219", "220", "221", "226", "227", "228", "238", "239", "271", "273", "366", "374", "384", "388", "391", "395", "396", "397", "398", "399", "400", "401", "402", "403", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417", "418", "419", "420", "421", "422", "423", "424", "425", "426", "427", "428", "429", "430", "431", "432", "433", "434", "435", "436", "437", "438", "439", "440", "441", "442", "443", "444", "445", "447", "448", "450", "451", "452", "453", "454", "455", "456", "457", "458", "459", "460", "461", "462", "463", "464", "465", "466", "467", "468", "469", "470", "471", "472", "473", "474", "475", "476", "477", "478", "479", "480", "481", "482", "483", "485", "486", "487", "488", "489", "490", "491", "492", "493", "494", "495", "496", "497", "498", "499", "500", "501", "502", "503", "504", "505", "506", "507", "508", "509", "510", "511", "513", "515", "516", "518", "520", "521", "522", "523", "524", "525", "526", "527", "528", "529", "531", "532", "533", "535", "536", "537", "539", "541", "542", "543", "544", "545", "546", "547", "548", "549", "550", "551", "552", "553", "554", "555", "556", "557", "558", "559", "560", "562", "563", "564", "565", "607", "609", "610", "611", "612", "613", "614", "615", "616", "617", "618", "619", "620", "621", "622", "624", "625", "626", "627", "628", "629", "630", "631", "632", "633", "634", "635", "636", "637", "638", "639", "640", "641", "642", "643", "644", "645", "647", "648", "649", "650", "651", "652", "653", "654", "655", "656", "657", "659", "660", "661", "662", "663", "664", "665", "666", "667", "668", "669", "670", "671", "672", "673", "674", "675", "676", "677", "689", "698", "699", "701", "702", "703", "704", "705", "706", "707", "721", "722", "723", "725", "726", "727", "728", "729", "730", "733", "734", "735", "736", "737", "739", "740", "741", "743", "746", "747", "748", "749", "750", "751", "752", "753", "754", "785", "786", "787", "788", "790", "791", "812", "815", "2541", "2542", "2543", "2544", "2545", "2546", "2547", "2548", "2549", "2550", "2557", "2561", "2565", "2566", "2567", "2569", "2575", "2576", "2577", "2584", "2586", "2587", "2588", "2589", "2590", "2591", "2597", "2598", "2599", "2600", "2601", "2602", "2604", "2606", "2611", "2612", "2613", "2621", "2622", "2628", "2629", "2630", "7687", "7694", "7697", "7698", "7708", "7715", "7734", "7735", "7736", "7740", "7742", "7747", "7751", "7752", "7770", "7771", "7774", "7786", "7801", "7805", "7811", "7812", "7813", "7818", "13477", "13478", "13479", "13480", "13481", "13492", "13493", "13494", "13495", "13499", "13506", "13507", "13509", "13510", "13511", "13512", "13513", "13515", "13516", "13517", "13518", "13519", "13520", "13521", "13522", "13529", "13531", "13532", "13533", "13553", "13607", "13609", "13610", "13611", "13612", "22718", "22723", "22724", "22742", "22749", "22750", "22753", "22754", "22755", "22756", "22757", "22763", "24554", "24556", "24752", "25891", "26443", "26538", "26546", "26711", "26745", "27122", "27128", "27142", "27154", "27165", "27172", "28100", "28103", "28107", "28123", "28127", "28938", "29312", "29319", "29332", "29356", "29370", "33420", "33457", "33467", "33474", "33496", "33506", "33520", "33534", "33539", "33555", "33557", "33559", "33560", "33581", "33585", "33617", "33641", "33744", "33796", "33797", "33799", "33804", "33821", "33834", "33869", "33880", "33886", "33965", "33973", "33974", "33979", "34106", "34108", "34109", "34110", "34113", "34114", "34117", "34120", "34122", "34123", "34126", "34127", "34128", "34130", "34133", "34137", "34138", "34140"];
const chapters3 = ["33624", "4", "5", "7", "8", "9", "16", "17", "18", "35", "36", "276", "277", "278", "281", "282", "284", "286", "292", "293", "294", "295", "296", "297", "298", "299", "300", "301", "305", "306", "307", "339", "7716", "7726", "7788", "7790", "7791", "24733", "33658", "33665", "33667", "33695", "33697", "33710", "33712", "33715", "33718", "33719", "33805", "1", "2", "3", "14", "20", "21", "22", "29", "31", "32", "84", "274", "275", "280", "283", "285", "287", "290", "291", "302", "2637", "2638", "2639", "2640", "7723", "7724", "7753", "7810", "7820", "13594", "13595", "13596", "13604", "13605", "28131", "29315", "33466", "33568", "33726", "33735", "33742", "33746", "33835"];
const chapters4 = ["187", "233", "234", "235", "308", "309", "310", "311", "312", "313", "315", "7691", "7700", "7717", "7729", "7754", "7765", "7800", "7821", "7822", "13475", "13476", "13599", "13600", "24561", "26448", "26743", "33463", "33544", "33686", "232", "696", "697", "7680", "7689", "7690", "7731", "7739", "7764", "7773", "7781", "7802", "13474", "13525", "13526", "13598", "25984"];
const chapters5 = ["179", "180", "181", "869", "870", "871", "872", "876", "877", "880", "881", "885", "886", "887", "888", "889", "891", "894", "898", "900", "901", "904", "905", "909", "927", "928", "930", "932", "933", "934", "935", "936", "943", "945", "946", "950", "951", "952", "953", "958", "959", "961", "963", "964", "967", "969", "970", "971", "13544", "13547", "13549", "27161", "27163", "27173", "29327", "33462", "33660", "33694", "33800", "33803", "33864", "33866", "178", "865", "866", "867", "868", "873", "874", "875", "879", "882", "883", "884", "890", "892", "895", "896", "899", "902", "903", "906", "907", "910", "911", "912", "913", "914", "915", "916", "917", "918", "919", "920", "921", "922", "923", "924", "925", "926", "937", "938", "939", "940", "941", "942", "947", "948", "949", "955", "956", "957", "960", "965", "966", "972", "973", "7732", "13528", "13534", "13535", "13536", "13537", "13538", "13539", "13540", "13541", "13543", "13545", "13546", "13548", "13550", "13551", "13552", "13554", "33418", "33655", "33656", "33737"];

const chapters6 = ["1576", "1577", "1579", "1582", "1588", "1589", "1591", "1592", "1597", "1598", "1599", "1610", "1611", "1612", "1613", "1619", "1641", "1642", "1644", "1646", "1647", "1648", "1650", "1651", "1652", "1653", "1662", "1663", "1664", "1665", "1673", "1674", "1675", "1677", "1679", "1680", "1691", "1693", "1696", "1705", "1707", "1708", "1726", "1727", "1729", "1741", "1752", "1754", "1756", "2035", "2072", "2645", "2646", "2665", "2670", "2671", "2672", "2677", "2678", "2684", "2686", "2687", "2694", "2696", "2701", "2703", "2704", "2710", "2713", "2714", "2731", "7836", "7892", "7906", "7909", "7912", "7931", "7942", "7943", "7944", "7945", "7946", "7947", "7950", "7953", "7979", "7982", "7983", "8002", "8005", "8015", "8016", "8017", "8019", "8020", "8022", "8023", "13560", "13561", "13898", "13924", "13928", "13929", "13930", "13931", "13932", "13934", "13936", "13941", "13946", "13954", "13956", "13957", "13967", "13974", "13975", "14006", "14009", "24283", "24563", "25957", "26009", "26027", "26072", "26491", "26492", "26655", "26693", "26761", "26764", "26765", "26766", "26790", "26810", "26814", "26817", "26835", "27095", "28133", "28137", "29357", "29358", "33501", "1574", "1575", "1578", "1586", "1587", "1593", "1614", "1615", "1616", "1617", "1618", "1627", "1631", "1632", "1633", "1636", "1637", "1638", "1639", "1640", "1654", "1656", "1661", "1666", "1669", "1676", "1701", "1702", "1703", "1704", "1712", "1713", "1714", "1715", "1716", "1717", "1720", "1730", "1747", "1748", "1749", "1761", "1990", "1995", "1997", "2177", "2642", "2643", "2655", "2656", "7840", "7861", "7862", "7864", "7885", "7899", "7901", "7910", "7911", "7929", "7930", "7933", "7940", "7941", "7948", "7980", "7981", "7984", "7996", "8014", "8018", "13587", "13905", "13906", "13907", "13908", "13910", "13914", "13917", "13922", "13923", "13948", "13977", "13979", "13982", "13986", "13997", "13999", "24284", "24566", "24568", "24569", "24570", "26554", "26671", "26676", "26704", "26705", "27123", "27164", "28126", "28925", "29354", "33375", "34065", "1595", "1596", "1609", "1621", "1623", "1624", "1655", "1668", "1694", "1697", "1698", "1699", "1706", "1709", "1710", "1711", "1757", "1758", "2649", "2650", "2651", "2652", "2662", "2668", "2669", "2673", "2689", "2690", "2693", "2697", "2702", "2706", "2707", "2711", "2712", "2717", "7835", "7863", "7875", "7914", "7932", "7992", "13559", "13562", "24564", "26013", "26441", "27155", "34052", "45815", "45816", "45817", "45818", "185051", "185052", "185054", "185056", "185057", "185059", "185060", "185061", "185065", "185066"];
const chapters7 = ["1600", "1695", "1982", "1983", "1988", "1998", "1999", "2009", "2010", "2011", "2012", "2013", "2014", "2016", "2017", "2018", "2021", "2025", "2026", "2028", "2033", "2039", "2040", "2664", "2699", "2708", "2709", "2716", "2721", "2725", "7866", "7868", "7877", "7879", "7889", "7890", "7900", "7902", "7921", "7935", "7937", "7962", "7986", "7988", "8004", "8007", "8008", "8009", "13938", "13939", "13942", "13953", "13955", "13958", "13976", "14003", "14007", "1657", "1658", "1659", "1660", "1718", "1719", "1981", "1985", "1986", "1987", "1991", "1993", "1994", "1996", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2023", "2024", "2719", "2724", "2726", "2727", "7858", "7865", "7867", "7869", "7874", "7876", "7878", "7891", "7934", "7936", "7987", "7990", "7991", "7993", "7995", "7997", "8003", "13582", "13915", "13950", "13980", "13981", "13987", "13988", "13991", "13992", "13993", "13998", "14001", "14002", "28924", "1992", "2015", "2019", "2022", "2700", "2720", "2722", "2723", "7872", "7905", "7913", "7939", "7994", "8000", "8006", "45819"];
const chapters8 = ["1725", "1728", "1750", "1751", "1753", "1755", "1771", "1772", "1773", "1774", "1775", "1783", "1784", "1785", "1786", "1787", "1788", "1789", "1790", "1791", "1793", "1794", "1795", "1796", "1797", "1798", "1799", "1800", "1801", "1802", "1803", "1804", "1805", "1806", "1807", "1808", "1809", "1810", "1811", "1812", "1813", "1814", "1815", "1816", "1817", "1818", "1819", "1820", "1821", "1822", "1823", "1824", "1825", "1826", "1827", "1828", "1829", "1830", "1831", "1832", "1833", "1834", "1835", "1836", "1837", "1838", "1839", "1840", "1841", "1842", "1843", "1844", "1845", "1846", "1847", "1848", "1849", "1850", "1852", "1853", "1854", "1855", "1856", "1857", "1858", "1859", "1860", "1861", "1862", "1863", "1864", "1865", "1866", "1867", "1868", "1869", "1870", "1871", "1872", "1873", "1874", "1875", "1876", "1877", "1878", "1879", "1880", "1881", "1882", "1883", "1884", "1885", "1886", "1887", "1888", "1889", "1890", "1891", "1893", "1894", "1896", "1897", "1898", "1899", "1900", "1901", "1902", "1903", "1904", "1905", "1906", "1907", "1908", "1909", "1910", "1911", "1912", "1913", "1914", "1915", "1916", "1917", "1918", "1919", "1920", "1921", "1922", "1924", "1925", "1926", "1927", "1928", "1929", "1930", "1931", "1932", "1933", "1934", "1935", "1936", "1937", "1938", "1939", "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1962", "1963", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "2653", "2698", "7903", "7952", "26472", "26762", "26763", "26767", "26768", "26769", "26819", "26821", "26823", "26833", "26841", "1746", "1768", "1769", "1777", "1778", "1779", "1780", "1781", "1782", "1961", "1964", "1965", "1967", "1968", "2020", "2641", "7880", "8010", "8021", "13921", "27162", "29362", "33477", "2728"];
const chapters9 = ["1590", "1630", "2045", "2046", "2047", "2051", "2071", "2073", "2074", "2075", "2076", "2077", "2078", "2079", "2080", "2081", "2082", "2083", "2084", "2086", "2093", "2100", "2101", "2103", "2108", "2109", "2118", "2119", "2120", "2127", "2128", "2129", "2130", "2131", "2132", "2133", "2146", "2147", "2148", "2149", "2152", "2158", "2159", "2160", "2161", "2185", "2186", "2187", "2188", "2189", "2190", "2191", "2193", "2194", "2195", "2196", "2197", "2198", "2199", "2200", "2201", "2202", "2203", "2204", "2279", "2280", "2647", "2648", "2660", "2666", "2667", "2679", "2680", "2681", "2683", "2685", "2735", "7830", "7831", "7833", "7837", "7838", "7839", "7844", "7846", "7847", "7848", "7849", "7850", "7851", "7852", "7881", "7882", "7884", "7886", "7888", "7893", "7907", "7919", "7922", "7923", "7954", "7955", "7956", "7957", "7960", "7961", "7963", "7964", "7965", "7966", "7967", "7968", "7969", "8012", "13565", "13566", "13572", "13573", "13578", "13579", "13580", "13585", "13900", "13933", "24281", "24282", "24571", "24572", "24580", "24581", "24582", "24583", "24584", "24585", "24586", "24588", "24589", "25930", "25956", "26008", "26478", "26479", "26489", "26521", "26573", "26656", "26662", "26663", "26666", "26694", "26698", "26699", "26703", "26735", "26737", "26748", "26759", "26771", "26785", "26796", "26815", "26828", "26832", "26834", "27115", "27127", "27157", "28108", "28110", "28112", "28114", "28115", "28116", "28117", "28118", "28125", "28128", "28134", "28138", "28926", "29349", "33380", "33382", "33391", "33436", "33442", "33443", "33444", "33445", "33476", "33480", "33481", "33483", "33489", "33773", "34042", "34044", "34046", "34048", "34049", "34050", "34053", "1682", "2043", "2044", "2052", "2053", "2056", "2057", "2058", "2059", "2060", "2061", "2062", "2063", "2064", "2065", "2066", "2067", "2068", "2069", "2070", "2087", "2089", "2095", "2096", "2097", "2098", "2099", "2104", "2106", "2111", "2114", "2115", "2116", "2117", "2122", "2123", "2124", "2125", "2126", "2134", "2135", "2136", "2140", "2141", "2142", "2143", "2144", "2145", "2151", "2154", "2155", "2156", "2157", "2170", "2171", "2172", "2173", "2174", "2175", "2178", "2179", "2180", "2181", "2182", "2183", "2184", "2277", "2278", "2290", "2294", "2295", "2657", "2658", "2675", "2676", "2730", "2734", "7832", "7845", "7883", "7894", "7896", "7898", "7916", "7978", "7985", "8001", "8011", "13571", "13577", "13583", "13591", "13912", "13919", "13920", "13990", "14000", "24280", "24565", "24567", "25931", "26477", "26502", "26508", "26515", "26518", "26523", "26560", "26651", "26652", "26672", "26687", "26730", "26736", "26751", "26760", "26770", "26776", "26778", "26781", "26809", "26827", "26829", "26831", "26849", "28935", "29353", "33379", "33390", "33393", "33431", "33449", "33452", "33774", "34034", "34040", "34055", "1966", "1989", "2048", "2054", "2055", "2085", "2088", "2090", "2091", "2092", "2094", "2102", "2105", "2107", "2110", "2112", "2113", "2121", "2137", "2138", "2139", "2150", "2162", "2205", "2206", "2207", "2691", "2736", "2737", "2738", "2739", "7841", "7842", "7843", "7854", "7895", "7897", "7904", "7918", "7920", "7938", "7958", "7959", "13569", "13574", "13575", "13576", "13581", "13584", "24577", "24578", "24579", "24587", "25586", "25988", "26036", "26513", "26661", "26668", "26772", "26797", "26830", "27160", "28130", "28931", "28933", "33439", "33498", "34031", "34037", "34038", "34039", "34041", "34043", "34045", "34047", "45820", "185055", "185058", "185062", "185063", "185064", "185067", "185068", "185069"];
const chapters10 = ["2153", "2210", "2211", "2216", "2223", "2224", "2225", "2226", "2227", "2228", "2229", "2236", "2237", "2238", "2239", "2240", "2245", "2246", "2247", "2248", "2249", "2254", "2255", "2261", "2262", "2267", "2268", "2269", "2270", "2271", "2272", "2275", "2276", "2283", "2284", "2285", "2286", "2287", "2288", "2292", "2297", "2298", "2299", "2300", "7853", "7925", "7972", "7973", "13567", "13614", "13902", "13903", "13904", "24591", "26559", "26782", "28124", "28928", "28934", "28940", "28941", "29321", "29322", "29364", "33370", "33433", "33441", "33450", "33469", "34051", "2050", "2176", "2208", "2209", "2213", "2214", "2215", "2217", "2218", "2219", "2220", "2222", "2232", "2233", "2234", "2235", "2242", "2243", "2244", "2253", "2257", "2258", "2259", "2260", "2264", "2265", "2266", "2274", "2281", "2282", "2296", "7924", "7970", "24761", "26490", "26537", "34036", "34056", "2230", "2231", "2241", "2250", "2251", "2252", "2256", "2263", "2273", "2289", "7926", "7974", "7975", "13586", "24590", "29366", "33472", "179931", "185053"];
const chapters11 = ["2291", "2303", "2304", "2306", "2307", "2312", "2313", "2314", "2316", "2317", "2318", "2320", "2323", "2324", "2325", "2326", "2327", "2331", "2332", "2333", "2334", "2336", "7855", "7856", "7857", "7976", "7977", "24436", "25990", "26064", "26496", "26498", "26749", "26818", "27092", "27097", "33373", "2302", "2305", "2308", "2309", "2310", "2311", "2315", "2319", "2321", "2322", "2328", "2329", "2330", "2335", "7927", "13996", "24774", "25932", "2293"];
const chapters12 = ["26674", "26695", "28111", "33500", "1552", "1553", "1554", "1555", "1556", "1557", "1558", "1559", "1560", "24770", "1545", "1546", "1561", "1562", "1563", "1564", "1565", "1566", "1567", "1568", "1569", "1570", "1571", "1572", "1573", "7908", "8013", "13555", "26701", "26702", "26752", "26850"];

var variables = [chapters1, chapters2, chapters3, chapters4, chapters5, chapters6, chapters7, chapters8, chapters9, chapters10, chapters11, chapters12];
let right = "";
let bestanswer = "";
let globalflag: boolean;
let bingo = 0;
let num = 0;

export interface Config {}

export const Config: Schema<Config> = Schema.object({})

export function apply(ctx: Context) {
  ctx.command('驾考答题', '开始驾驶理论考试答题').action(
    async ({session}) => {
      void session.send(`准备好，驾驶理论考试开始咯！\n答题时回复数字或字母(大小写)即可~\n结束请发送：结束驾考答题`);
      globalflag = true;
      await sleep(1000);
      void session.send(await getQuestion());
      return ;
  }
  )
  ctx.command('结束驾考答题', '结束驾考答题').action(
    async (_, message) => {
      if(globalflag != true)return "已结束！";
      globalflag = false;
      let rate = bingo/num;
      let response = "";
      if(rate == 1){ 
        response = "本次测试总共"+ num +"题，恭喜您全部答对！";
        if(num>=10)response = "结束成功。本次测试总共"+ num +"题，恭喜您全部答对！真不愧是老司机~";
      }
      if(rate >= 0.9)response = "结束成功。本次测试总共"+ num +"题，您答对"+ bingo +"道，考科目一应该是稳了~";
      if(rate >= 0.8)response = "结束成功。本次测试总共"+ num +"题，您答对"+ bingo +"道，考科目一还有点悬，请继续努力哦";
      if(rate >= 0.6)response = "结束成功。本次测试总共"+ num +"题，您答对"+ bingo +"道，还需要继续努力哦~";
      if(rate <= 0.6)response = "结束成功。本次测试总共"+ num +"题，您答对"+ bingo +"道，正确率有点低，多练习一下吧~";
      if(rate == 0)response = "结束成功。本次测试总共"+ num +"题，您一道都没答对，难道您就是传说中的马路杀手？";
      bingo = 0;
      num = 0;
      return response;
  }
  )
  ctx.middleware(async (session, next) => {
    console.log("获取到信息:"+session.content);
    var idiom = replaceText(replaceText(session.content,'<at id="'+session.selfId+'"/>',""),' ',"");
    if(globalflag != true)return next();//未开启答题，不处理
    if(!isValidCombination(idiom))return next();//回答不是规定的数字或字母，不处理
    if(isEquivalentAnswer(idiom,right)){
      void session.send("回答正确。" + bestanswer);
      bingo++;
    }
    else {
      let rightAnswer = replaceText(right,"1","A");
      rightAnswer = replaceText(rightAnswer,"2","B");
      rightAnswer = replaceText(rightAnswer,"3","C");
      rightAnswer = replaceText(rightAnswer,"4","D");
      rightAnswer = replaceText(rightAnswer,"5","E");
      rightAnswer = replaceText(rightAnswer,"6","F");
      rightAnswer = replaceText(rightAnswer,"7","G");
      void session.send("回答错误，正确答案是" + rightAnswer + "。" + bestanswer);
    }
    num++;
    let nextQuestion = await getQuestion();
    await sleep(1000);
    void session.send("下一题：" + nextQuestion);
    return next();
  })
}

async function getQuestion(): Promise<string> {
  // 生成随机索引  
  let randomIndex1 = Math.floor(Math.random() * variables.length);  
  let randomIndex2 = Math.floor(Math.random() * variables[randomIndex1].length);
  // 获取随机题目ID
  let randomVariable = variables[randomIndex1][randomIndex2]; 
  let url = 'https://mnks.jxedt.com/get_question?index=' + randomVariable;
  let data = "";
  let cookies = "";
  let responseData = await sendGetRequest({url,data,cookies});
  console.log(responseData);
  if(responseData.question!=""){
    let response = responseData.question;
    switch (responseData.type) {  
      case '1':  
      response = "(判断)" + response;  
        break;  
      case '2':  
      response = "(单选)" + response;
        break; 
      case '3':  
      response = "(多选)" + response;   
        break; 
      default:  
        console.log('未知类型');  
    }
    response = response + h("image", { url: responseData.imageurl });
    response = response + "\n" + replaceText(", " + responseData.options,", ","\n");
    right = responseData.right;
    bestanswer = responseData.bestanswer;
    return response;
  }
  else return "获取题目失败";
}

async function getRequestWithCookies(url: string): Promise<any> {  
  // 创建一个 Axios 实例  
  const instance = axios.create();  
  
  // 定义请求配置  
  const config: AxiosRequestConfig = {  
    url,  
    method: 'get',  
    responseType: 'text', // 指定返回数据的类型为 JSON  
  };  
  
  try {  
    // 发送 GET 请求  
    const response = await instance(config);  
    //console.log(response.data); // 输出返回的数据  
  
    // 将返回的 cookies 保存在变量中  
    const cookies = response.headers['set-cookie'];  
    //console.log(cookies); // 输出保存的 cookies  
    return response.data;
  } catch (error) {  
    console.error(error); // 输出错误信息  
    return [];
  } finally {  
  }  
}

function isEquivalentAnswer(answer: string, rightAnswer: string): boolean {  
  let a = replaceText(rightAnswer,"1","A");
  a = replaceText(a,"2","B");
  a = replaceText(a,"3","C");
  a = replaceText(a,"4","D");
  a = replaceText(a,"5","E");
  a = replaceText(a,"6","F");
  a = replaceText(a,"7","G");
  let b = replaceText(answer,"1","A");
  b = replaceText(b,"2","B");
  b = replaceText(b,"3","C");
  b = replaceText(b,"4","D");
  b = replaceText(b,"5","E");
  b = replaceText(b,"6","F");
  b = replaceText(b,"7","G");
  b = replaceText(b,"a","A");
  b = replaceText(b,"b","B");
  b = replaceText(b,"c","C");
  b = replaceText(b,"d","D");
  b = replaceText(b,"e","E");
  b = replaceText(b,"f","F");
  b = replaceText(b,"g","G");
  b = replaceText(b," ","");
  return a === b;  
}

function isAlphaNumeric(str: string): boolean {  
  const regex = /^[a-zA-Z0-9]*$/;  
  return regex.test(str);  
}

function replaceText(text: string, searchText: string, replaceText: string): string {  
return text.replace(new RegExp(searchText, 'g'), replaceText);  
}

interface PostRequestOptions {  
  url: string;  
  data: any;  
  cookies?: string;  
}  
async function sendGetRequest({ url, data, cookies }: PostRequestOptions): Promise<any> {  
  try {  
    const options: RequestInit = {  
      method: 'GET',  
      headers: {  
      'Content-Type':'application/json;charset=UTF-8', // 默认设置 Content-Type 为 application/json
      'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',
      },  
       
    };  
  
    if (cookies) {  
      options.headers['Cookie'] = cookies;  
    }  
  
    const response = await fetch(url, options);  
    const responseBody = await response.json();  
    return responseBody;  
  } catch (error) {  
    console.error('Error sending POST request:', error);  
    throw error;  
  }  
}  
function isValidCombination(str: string): boolean {  
  // 定义正则表达式，匹配1-7的数字和A-G的字母  
  const regex = /^[1-7a-gA-G]+$/;  
    
  // 检查字符串是否匹配正则表达式  
  if (!regex.test(str)) {  
    return false;  
  }  
  
  // 创建一个Set来存储已出现的字符和数字  
  const seen = new Set();  
  
  // 遍历字符串中的每个字符  
  for (let i = 0; i < str.length; i++) {  
    const char = str[i];  
      
    // 检查字符是否已经在Set中出现过  
    if (seen.has(char)) {  
      return false; // 如果出现重复，返回false  
    }  
      
    seen.add(char); // 将字符添加到Set中表示已出现  
  }  
  
  return true; // 所有字符和数字都只出现一次，返回true  
} 
`
{
	"id": 233,
	"question": "驾驶机动车在道路上发生交通事故要立即将车移到路边。",
	"a": "",
	"b": "",
	"c": "",
	"d": "",
	"e": "",
	"f": "",
	"g": "",
	"right": "2",
	"ta": "2",
	"cid": 4,
	"imageurl": "",
	"sohuimg": "",
	"bestanswer": "发生交通事故要立即停车，保护现场，未造成人身伤亡且无争议的，才可以即行撤离现场，不是所有情况都立即将车移到路边，所以选择错误《道路交通安全法》规定：在道路上发生交通事故，未造成人身伤亡，当事人对事实及成因无争议的，可以即行撤离现场，恢复交通，自行协商处理损害赔偿事宜。",
	"bestanswerid": "1329673907506053122",
	"chapter": 4,
	"options": "A:正确, B:错误",
	"type": "1"
}
{
	"id": 482,
	"question": "这个标志是什么？",
	"a": "多乘员车辆（HOV）专用车道",
	"b": "靠右侧车道行驶",
	"c": "公交专用车道",
	"d": "有轨电车专用车道",
	"e": "",
	"f": "",
	"g": "",
	"right": "2",
	"ta": "2",
	"cid": 2,
	"imageurl": "https://wos.58cdn.com.cn/XyVuTsRqXyf/question/482-1693897520448.jpg",
	"sinaimg": "https://wos.58cdn.com.cn/XyVuTsRqXyf/question/482-1693897520448.png",
	"sohuimg": "",
	"bestanswer": "靠右侧道路行驶标志：表示只准一切车辆靠右侧道路行驶此标志设在车辆必须靠右侧行驶的路口以前适当位置。",
	"bestanswerid": "2600454",
	"chapter": 2,
	"options": "A:多乘员车辆（HOV）专用车道, B:靠右侧车道行驶, C:公交专用车道, D:有轨电车专用车道",
	"type": "2"
}
{
	"id": 185066,
	"question": "在哪些情况下应增大安全跟车距离?",
	"a": "在城市快速路行驶时",
	"b": "在湿滑路面行驶时",
	"c": "在恶劣天气行驶时",
	"d": "在高等级公路行驶时",
	"e": "",
	"f": "",
	"g": "",
	"right": "1234",
	"ta": "1234",
	"cid": 1,
	"imageurl": "",
	"sohuimg": "",
	"bestanswer": "在湿滑路面、高等级公路、城市快速路、恶劣天气行驶时，要增大与前车的安全距离，降低事故发生的风险",
	"bestanswerid": "1711944329653706752",
	"chapter": 1,
	"options": "A:在城市快速路行驶时, B:在湿滑路面行驶时, C:在恶劣天气行驶时, D:在高等级公路行驶时",
	"type": "3"
}
`